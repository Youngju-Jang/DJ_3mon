package bit.basic.collection;

import java.io.File;
import java.io.FileInputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Scanner;

import bit.app.io.Member;

public class ListEx1 {
	private final String PATH="c:\\test\\obj.txt";
	private static ListDao dao = ListDao.getDao();
	private Scanner scanner = new Scanner(System.in);	
	
	
	// 0. 비었는가
	public boolean checkEmpty() {
		// 텅비었을경우
		if(dao.getList().size()==0) {
			return true;
		}
		else return false;
	}
	
	// 1. Add
	public void add() {
		BoardBean bean = new BoardBean();
		
		System.out.println("no");
		int no = scanner.nextInt();	
		while(dao.getList().size()!=0 && dao.getIdNumIndex(no)!=(-1)) { // 중복된 숫자일경우 true
			System.out.println("이미 존재하는 숫자입니다. 새로운 번호를 입력하십시오.");
			no = scanner.nextInt();
		}
		bean.setNo(no); 		
		System.out.println("title");
		bean.setTitle(scanner.next());
		System.out.println("writer");
		bean.setWriter(scanner.next());
		System.out.println("contents");
		bean.setContents(scanner.next());  
		System.out.println("password");
		bean.setPassword(scanner.next());
		Calendar c = Calendar.getInstance();
		String regdate = String.valueOf(c.get(Calendar.YEAR))
				.concat(String.valueOf(c.get(Calendar.MONTH)+1))
				.concat(String.valueOf(c.get(Calendar.DATE)));
		bean.setRegdate(regdate);
		System.out.println(bean);
		dao.listInsert(bean);
	}
	
	// 2. List
	public void list() {
		Iterator<BoardBean> iter = dao.getList().iterator();
		while(iter.hasNext()) {
			System.out.println(iter.next());
		}
	}

	// 3. Info 
	public void info() {
		// 텅비었을경우
		if(checkEmpty()) {
			System.out.println("텅 비었습니다.");
			return;
		}
		// info 원하는 빈 넘버 get
		int indexNum = search();
		// 존재하는 번호인가
		if(indexNum ==-1) {
			System.out.println("존재하지 않는 책입니다.");
			return ;
		}
		System.out.println(dao.getIndexBean(indexNum).toString());
	}
	
	// 4. Modify
	public void modify() {
		// 텅비었을경우
		if(checkEmpty()) {
			System.out.println("텅 비었습니다.");
			return;
		}
		// 번호받고
		int index = search();
		
		// 존재하는 번호인가
		if(index==-1) {
			System.out.println("존재하지 않는 책입니다.");
			return;
		}
		// 비번확인
		if(!checkPass(index)) { // 비번틀릴경우
			System.out.println("비밀번호가 틀렸습니다.");
			return;
		}
		BoardBean bean = dao.getIndexBean(index);
		System.out.println("정보변경을 시작합니다.");
		System.out.println("New title : ");
		bean.setTitle(scanner.next());
		System.out.println("New writer : ");
		bean.setWriter(scanner.next());
		System.out.println("New contents : ");
		bean.setContents(scanner.next());
		System.out.println("New password : ");
		bean.setPassword(scanner.next());
		
		System.out.println("정보변경 완료.");
		System.out.println(bean.toString());
	}
	
	// 5. Delete
	public void delete() {
		// 번호받고
		int index = search();
		
		// 존재하는 번호인가
		if(index==-1) {
			System.out.println("존재하지 않는 책입니다.");
			return;
		}
		// 비번확인
		if(!checkPass(index)) { // 비번틀릴경우
			System.out.println("비밀번호가 틀렸습니다.");
			return;
		}
		System.out.println(dao.deleteBeanIndex(index));
	}
	// 6. Save
	public void save() {
//		System.out.println("저장할 파일이름 : ");
//		String fileName= scanner.next();
		try(ObjectOutputStream oos = new ObjectOutputStream(new PrintStream(new File(PATH)))){
				oos.writeObject(dao.getList());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	// 7. Open 
	public void open() {
//		System.out.println("불러올 파일이름 : ");
//		String fileName= scanner.next();
		try(ObjectInputStream ois = new ObjectInputStream(new FileInputStream(new File(PATH)))) {
			if(ois.readObject() == null) {
				dao.setList(new ArrayList<BoardBean>()); 
				return;
			}
			ArrayList<BoardBean> fileBean = (ArrayList<BoardBean>) ois.readObject();
			dao.setList(fileBean); // 전체 db변경함
			System.out.println("DB insert 완료");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	// 책 번호로 책 인덱스 get
	public int search() {
		System.out.println("IdNumber");
		int idNum = scanner.nextInt();
		return dao.getIdNumIndex(idNum);
	}
	// 비번확인
	public boolean checkPass(int index) {
		System.out.println("password ?");
		String password = scanner.next();
		if(dao.getList().get(index).getPassword().equals(password)) {
			return true;
		}
		return false;
	}
	
	public ListEx1() {
		open();
	}
	public void menu() {
		while(true) {
			System.out.println("1. Add 2.List 3.Info 4.Modify 5.Delete 6.Save 7.Open");
			
			switch(scanner.nextInt()) {
			case 1:
				add(); break;
			case 2:
				list(); break;
			case 3: 
				info(); break;
			case 4:
				modify(); break;
			case 5:
				delete(); break;
			case 6:
				save(); break;
			case 7: 
				open(); break;
			}
		}
	}
	
	public static void main(String[] args) {
		ListEx1 ex = new ListEx1();
		ex.menu();
	}	
}
